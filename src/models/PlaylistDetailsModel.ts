/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LanguageEnum } from './LanguageEnum';
import {
    LanguageEnumFromJSON,
    LanguageEnumFromJSONTyped,
    LanguageEnumToJSON,
} from './LanguageEnum';
import type { TrackModel } from './TrackModel';
import {
    TrackModelFromJSON,
    TrackModelFromJSONTyped,
    TrackModelToJSON,
} from './TrackModel';

/**
 * 
 * @export
 * @interface PlaylistDetailsModel
 */
export interface PlaylistDetailsModel {
    /**
     * 
     * @type {string}
     * @memberof PlaylistDetailsModel
     */
    cover?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PlaylistDetailsModel
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof PlaylistDetailsModel
     */
    readonly type: PlaylistDetailsModelTypeEnum;
    /**
     * 
     * @type {Array<LanguageEnum>}
     * @memberof PlaylistDetailsModel
     */
    languages?: Array<LanguageEnum> | null;
    /**
     * 
     * @type {LanguageEnum}
     * @memberof PlaylistDetailsModel
     */
    language?: LanguageEnum;
    /**
     * 
     * @type {string}
     * @memberof PlaylistDetailsModel
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlaylistDetailsModel
     */
    description?: string | null;
    /**
     * 
     * @type {Array<TrackModel>}
     * @memberof PlaylistDetailsModel
     */
    tracks?: Array<TrackModel> | null;
    /**
     * 
     * @type {number}
     * @memberof PlaylistDetailsModel
     */
    trackCount: number;
    /**
     * 
     * @type {number}
     * @memberof PlaylistDetailsModel
     */
    totalSeconds: number;
}


/**
 * @export
 */
export const PlaylistDetailsModelTypeEnum = {
    PlaylistDetails: 'playlist_details'
} as const;
export type PlaylistDetailsModelTypeEnum = typeof PlaylistDetailsModelTypeEnum[keyof typeof PlaylistDetailsModelTypeEnum];


/**
 * Check if a given object implements the PlaylistDetailsModel interface.
 */
export function instanceOfPlaylistDetailsModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "trackCount" in value;
    isInstance = isInstance && "totalSeconds" in value;

    return isInstance;
}

export function PlaylistDetailsModelFromJSON(json: any): PlaylistDetailsModel {
    return PlaylistDetailsModelFromJSONTyped(json, false);
}

export function PlaylistDetailsModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistDetailsModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cover': !exists(json, 'cover') ? undefined : json['cover'],
        'id': json['id'],
        'type': json['type'],
        'languages': !exists(json, 'languages') ? undefined : (json['languages'] === null ? null : (json['languages'] as Array<any>).map(LanguageEnumFromJSON)),
        'language': !exists(json, 'language') ? undefined : LanguageEnumFromJSON(json['language']),
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'tracks': !exists(json, 'tracks') ? undefined : (json['tracks'] === null ? null : (json['tracks'] as Array<any>).map(TrackModelFromJSON)),
        'trackCount': json['track_count'],
        'totalSeconds': json['total_seconds'],
    };
}

export function PlaylistDetailsModelToJSON(value?: PlaylistDetailsModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cover': value.cover,
        'id': value.id,
        'languages': value.languages === undefined ? undefined : (value.languages === null ? null : (value.languages as Array<any>).map(LanguageEnumToJSON)),
        'language': LanguageEnumToJSON(value.language),
        'title': value.title,
        'description': value.description,
        'tracks': value.tracks === undefined ? undefined : (value.tracks === null ? null : (value.tracks as Array<any>).map(TrackModelToJSON)),
        'track_count': value.trackCount,
        'total_seconds': value.totalSeconds,
    };
}

