/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DiscoverCollectionElement
 */
export interface DiscoverCollectionElement {
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    type?: string | null;
    /**
     * 
     * @type {number}
     * @memberof DiscoverCollectionElement
     */
    id?: number | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    serverTranslation?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    subtitle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    subtitleServerTranslation?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    tag?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    link?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof DiscoverCollectionElement
     */
    useCoverCarousel?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    messageNb?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    messageEn?: string | null;
    /**
     * 
     * @type {number}
     * @memberof DiscoverCollectionElement
     */
    count?: number;
    /**
     * 
     * @type {boolean}
     * @memberof DiscoverCollectionElement
     */
    featurePreviewOnly?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    userGroup?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof DiscoverCollectionElement
     */
    hideBefore?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof DiscoverCollectionElement
     */
    hideAfter?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    minBmmVersion?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    maxBmmVersion?: string | null;
    /**
     * 
     * @type {number}
     * @memberof DiscoverCollectionElement
     */
    minAge?: number | null;
    /**
     * 
     * @type {number}
     * @memberof DiscoverCollectionElement
     */
    maxAge?: number | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    experimentId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    color?: string | null;
    /**
     * 
     * @type {number}
     * @memberof DiscoverCollectionElement
     */
    order?: number;
    /**
     * 
     * @type {boolean}
     * @memberof DiscoverCollectionElement
     */
    useEpisodeCover?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    client?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DiscoverCollectionElement
     */
    churchUid?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof DiscoverCollectionElement
     */
    disabled?: boolean | null;
}

/**
 * Check if a given object implements the DiscoverCollectionElement interface.
 */
export function instanceOfDiscoverCollectionElement(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DiscoverCollectionElementFromJSON(json: any): DiscoverCollectionElement {
    return DiscoverCollectionElementFromJSONTyped(json, false);
}

export function DiscoverCollectionElementFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscoverCollectionElement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'serverTranslation': !exists(json, 'server_translation') ? undefined : json['server_translation'],
        'subtitle': !exists(json, 'subtitle') ? undefined : json['subtitle'],
        'subtitleServerTranslation': !exists(json, 'subtitle_server_translation') ? undefined : json['subtitle_server_translation'],
        'tag': !exists(json, 'tag') ? undefined : json['tag'],
        'link': !exists(json, 'link') ? undefined : json['link'],
        'useCoverCarousel': !exists(json, 'use_cover_carousel') ? undefined : json['use_cover_carousel'],
        'messageNb': !exists(json, 'message_nb') ? undefined : json['message_nb'],
        'messageEn': !exists(json, 'message_en') ? undefined : json['message_en'],
        'count': !exists(json, 'count') ? undefined : json['count'],
        'featurePreviewOnly': !exists(json, 'feature_preview_only') ? undefined : json['feature_preview_only'],
        'userGroup': !exists(json, 'user_group') ? undefined : json['user_group'],
        'hideBefore': !exists(json, 'hide_before') ? undefined : (json['hide_before'] === null ? null : new Date(json['hide_before'])),
        'hideAfter': !exists(json, 'hide_after') ? undefined : (json['hide_after'] === null ? null : new Date(json['hide_after'])),
        'minBmmVersion': !exists(json, 'min_bmm_version') ? undefined : json['min_bmm_version'],
        'maxBmmVersion': !exists(json, 'max_bmm_version') ? undefined : json['max_bmm_version'],
        'minAge': !exists(json, 'min_age') ? undefined : json['min_age'],
        'maxAge': !exists(json, 'max_age') ? undefined : json['max_age'],
        'experimentId': !exists(json, 'experiment_id') ? undefined : json['experiment_id'],
        'color': !exists(json, 'color') ? undefined : json['color'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'useEpisodeCover': !exists(json, 'use_episode_cover') ? undefined : json['use_episode_cover'],
        'client': !exists(json, 'client') ? undefined : json['client'],
        'churchUid': !exists(json, 'church_uid') ? undefined : json['church_uid'],
        'disabled': !exists(json, 'disabled') ? undefined : json['disabled'],
    };
}

export function DiscoverCollectionElementToJSON(value?: DiscoverCollectionElement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'id': value.id,
        'title': value.title,
        'server_translation': value.serverTranslation,
        'subtitle': value.subtitle,
        'subtitle_server_translation': value.subtitleServerTranslation,
        'tag': value.tag,
        'link': value.link,
        'use_cover_carousel': value.useCoverCarousel,
        'message_nb': value.messageNb,
        'message_en': value.messageEn,
        'count': value.count,
        'feature_preview_only': value.featurePreviewOnly,
        'user_group': value.userGroup,
        'hide_before': value.hideBefore === undefined ? undefined : (value.hideBefore === null ? null : value.hideBefore.toISOString()),
        'hide_after': value.hideAfter === undefined ? undefined : (value.hideAfter === null ? null : value.hideAfter.toISOString()),
        'min_bmm_version': value.minBmmVersion,
        'max_bmm_version': value.maxBmmVersion,
        'min_age': value.minAge,
        'max_age': value.maxAge,
        'experiment_id': value.experimentId,
        'color': value.color,
        'order': value.order,
        'use_episode_cover': value.useEpisodeCover,
        'client': value.client,
        'church_uid': value.churchUid,
        'disabled': value.disabled,
    };
}

