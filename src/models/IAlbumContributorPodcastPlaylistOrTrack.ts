/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AlbumModel } from './AlbumModel';
import {
    instanceOfAlbumModel,
    AlbumModelFromJSON,
    AlbumModelFromJSONTyped,
    AlbumModelToJSON,
} from './AlbumModel';
import type { ContributorModel } from './ContributorModel';
import {
    instanceOfContributorModel,
    ContributorModelFromJSON,
    ContributorModelFromJSONTyped,
    ContributorModelToJSON,
} from './ContributorModel';
import type { PlaylistDetailsModel } from './PlaylistDetailsModel';
import {
    instanceOfPlaylistDetailsModel,
    PlaylistDetailsModelFromJSON,
    PlaylistDetailsModelFromJSONTyped,
    PlaylistDetailsModelToJSON,
} from './PlaylistDetailsModel';
import type { PlaylistModel } from './PlaylistModel';
import {
    instanceOfPlaylistModel,
    PlaylistModelFromJSON,
    PlaylistModelFromJSONTyped,
    PlaylistModelToJSON,
} from './PlaylistModel';
import type { PodcastModel } from './PodcastModel';
import {
    instanceOfPodcastModel,
    PodcastModelFromJSON,
    PodcastModelFromJSONTyped,
    PodcastModelToJSON,
} from './PodcastModel';
import type { TrackModel } from './TrackModel';
import {
    instanceOfTrackModel,
    TrackModelFromJSON,
    TrackModelFromJSONTyped,
    TrackModelToJSON,
} from './TrackModel';

/**
 * @type IAlbumContributorPodcastPlaylistOrTrack
 * 
 * @export
 */
export type IAlbumContributorPodcastPlaylistOrTrack = { type: 'album' } & AlbumModel | { type: 'contributor' } & ContributorModel | { type: 'playlist' } & PlaylistModel | { type: 'playlist_details' } & PlaylistDetailsModel | { type: 'podcast' } & PodcastModel | { type: 'track' } & TrackModel;

export function IAlbumContributorPodcastPlaylistOrTrackFromJSON(json: any): IAlbumContributorPodcastPlaylistOrTrack {
    return IAlbumContributorPodcastPlaylistOrTrackFromJSONTyped(json, false);
}

export function IAlbumContributorPodcastPlaylistOrTrackFromJSONTyped(json: any, ignoreDiscriminator: boolean): IAlbumContributorPodcastPlaylistOrTrack {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'album':
            return {...AlbumModelFromJSONTyped(json, true), type: 'album'};
        case 'contributor':
            return {...ContributorModelFromJSONTyped(json, true), type: 'contributor'};
        case 'playlist':
            return {...PlaylistModelFromJSONTyped(json, true), type: 'playlist'};
        case 'playlist_details':
            return {...PlaylistDetailsModelFromJSONTyped(json, true), type: 'playlist_details'};
        case 'podcast':
            return {...PodcastModelFromJSONTyped(json, true), type: 'podcast'};
        case 'track':
            return {...TrackModelFromJSONTyped(json, true), type: 'track'};
        default:
            throw new Error(`No variant of IAlbumContributorPodcastPlaylistOrTrack exists with 'type=${json['type']}'`);
    }
}

export function IAlbumContributorPodcastPlaylistOrTrackToJSON(value?: IAlbumContributorPodcastPlaylistOrTrack | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'album':
            return AlbumModelToJSON(value);
        case 'contributor':
            return ContributorModelToJSON(value);
        case 'playlist':
            return PlaylistModelToJSON(value);
        case 'playlist_details':
            return PlaylistDetailsModelToJSON(value);
        case 'podcast':
            return PodcastModelToJSON(value);
        case 'track':
            return TrackModelToJSON(value);
        default:
            throw new Error(`No variant of IAlbumContributorPodcastPlaylistOrTrack exists with 'type=${value['type']}'`);
    }

}

