/* tslint:disable */
/* eslint-disable */
/**
 * BMM Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  IAllDocumentModels,
  LanguageEnum,
} from '../models/index';
import {
    IAllDocumentModelsFromJSON,
    IAllDocumentModelsToJSON,
    LanguageEnumFromJSON,
    LanguageEnumToJSON,
} from '../models/index';

export interface DiscoverCarplayGetRequest {
    lang?: LanguageEnum;
    theme?: string;
}

export interface DiscoverGetRequest {
    lang?: LanguageEnum;
    age?: number;
    theme?: string;
}

/**
 * 
 */
export class DiscoverApi extends runtime.BaseAPI {

    /**
     */
    async discoverCarplayGetRaw(requestParameters: DiscoverCarplayGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<IAllDocumentModels>>> {
        const queryParameters: any = {};

        if (requestParameters.lang !== undefined) {
            queryParameters['lang'] = requestParameters.lang;
        }

        if (requestParameters.theme !== undefined) {
            queryParameters['theme'] = requestParameters.theme;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Discover/carplay`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(IAllDocumentModelsFromJSON));
    }

    /**
     */
    async discoverCarplayGet(requestParameters: DiscoverCarplayGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<IAllDocumentModels>> {
        const response = await this.discoverCarplayGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async discoverGetRaw(requestParameters: DiscoverGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<IAllDocumentModels>>> {
        const queryParameters: any = {};

        if (requestParameters.lang !== undefined) {
            queryParameters['lang'] = requestParameters.lang;
        }

        if (requestParameters.age !== undefined) {
            queryParameters['age'] = requestParameters.age;
        }

        if (requestParameters.theme !== undefined) {
            queryParameters['theme'] = requestParameters.theme;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Discover`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(IAllDocumentModelsFromJSON));
    }

    /**
     */
    async discoverGet(requestParameters: DiscoverGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<IAllDocumentModels>> {
        const response = await this.discoverGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
